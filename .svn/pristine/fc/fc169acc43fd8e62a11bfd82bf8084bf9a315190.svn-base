package com.pengyue.ptas.util;

import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Pattern;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.pengyue.ptas.bean.XtUser;

public class LoginFilter implements Filter {

    @Override
    public void init(FilterConfig filterConfig) throws ServletException {
        // TODO Auto-generated method stub

    }

    @Override
    public void doFilter(ServletRequest request, ServletResponse response,
            FilterChain chain) throws IOException, ServletException {
        // 获得在下面代码中要用的request,response,session对象
        HttpServletRequest servletRequest = (HttpServletRequest) request;
        HttpServletResponse servletResponse = (HttpServletResponse) response;
        HttpSession session = servletRequest.getSession();

        // 获得用户请求的URI
        String path = servletRequest.getRequestURI();
      
        String url = servletRequest.getRequestURL().toString();
        url =  url.substring(0,url.lastIndexOf("/"));
        // 从session里取员工工号信息
        XtUser xtUser = (XtUser) session.getAttribute("curUser");

        /*创建类Constants.java，里面写的是无需过滤的页面
        for (int i = 0; i < Constants.NoFilter_Pages.length; i++) {

            if (path.indexOf(Constants.NoFilter_Pages[i]) > -1) {
                chain.doFilter(servletRequest, servletResponse);
                return;
            }
        }*/
        servletResponse.setCharacterEncoding("utf-8");
        PrintWriter out = servletResponse.getWriter();
        //需过滤的请求(所有jsp,但登陆界面不过滤)
        System.out.println(path);
       
        //jsp后缀需要过滤
        if(path.endsWith(".jsp")){
        	//login.jsp不需要过滤
        	if(path.indexOf("/login.jsp") > -1){
        		chain.doFilter(servletRequest, servletResponse);
        	}else{
        		// 判断如果没有取到员工信息,就跳转到登陆页面
                if (xtUser == null) {
                    // 跳转到登陆页面
                    //servletResponse.sendRedirect(servletRequest.getContextPath()+"/login.jsp");
                	out.print("<script>window.location.href='"+url+"/login.jsp'</script>");

                } else {
                    // 已经登陆,继续此次请求
                    chain.doFilter(request, response);
                }
        	}
        	
        }
        //struts请求需要过滤
        else if(path.matches("^/ptas/[[a-z][A-Z]]+_[[a-z][A-Z]]+$")) {
        	//登陆请求不要过滤
        	if(path.indexOf("login_login") > -1){
        		chain.doFilter(servletRequest, servletResponse);
        	}else{
        		// 判断如果没有取到员工信息,就跳转到登陆页面
                if (xtUser == null) {
                    // 跳转到登陆页面
                    //servletResponse.sendRedirect(servletRequest.getContextPath()+"/login.jsp");
                	out.print("<script>window.location.href='"+url+"/login.jsp'</script>");
                } else {
                    // 已经登陆,继续此次请求
                    chain.doFilter(request, response);
                }
        	}
            
        }else if(path.equals("/ptas/")){
        	// 判断如果没有取到员工信息,就跳转到登陆页面
            if (xtUser == null) {
                // 跳转到登陆页面
                //servletResponse.sendRedirect(servletRequest.getContextPath()+"/login.jsp");
            	out.print("<script>window.location.href='"+url+"/login.jsp'</script>");

            } else {
                // 已经登陆,继续此次请求
                chain.doFilter(request, response);
            }
        }
        else
        	chain.doFilter(servletRequest, servletResponse);
      

    }

    @Override
    public void destroy() {
        // TODO Auto-generated method stub

    }
    
    public static void main(String[] args) {
    	String a = "http://localhost:8089/ptas/index_index";
    	String aa = a.substring(0,a.lastIndexOf("/"));
    	System.out.println(aa);
    	/*SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//设置日期格式
    	System.out.println(df.format(new Date()));// new Date()为获取当前系统时间
*/	}

}
